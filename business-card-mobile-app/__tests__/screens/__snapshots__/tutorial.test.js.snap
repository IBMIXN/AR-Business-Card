// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tutorial AR tutorial renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                Tutorial
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        forwardedRef={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            Array [
              Object {
                "overflow": undefined,
              },
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "black",
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "black",
                              "flex": 1,
                              "justifyContent": "center",
                            }
                          }
                        >
                          <RCTScrollView
                            activeAnimationOptions={null}
                            activeAnimationType="timing"
                            activeSlideAlignment="center"
                            activeSlideOffset={20}
                            apparitionDelay={0}
                            automaticallyAdjustContentInsets={false}
                            autoplay={false}
                            autoplayDelay={1000}
                            autoplayInterval={3000}
                            callbackOffsetMargin={5}
                            containerCustomStyle={Object {}}
                            contentContainerCustomStyle={Object {}}
                            contentContainerStyle={
                              Array [
                                Object {
                                  "paddingLeft": 0,
                                  "paddingRight": 0,
                                },
                                Object {},
                              ]
                            }
                            data={
                              Array [
                                Object {
                                  "component": <Image
                                    resizeMode="contain"
                                    source={1}
                                    style={
                                      Object {
                                        "height": "80%",
                                        "width": "90%",
                                      }
                                    }
                                  />,
                                  "text": "Flip over the business card to find the IBM AR logo.",
                                },
                                Object {
                                  "component": <Image
                                    resizeMode="contain"
                                    source={1}
                                    style={
                                      Object {
                                        "height": "80%",
                                        "width": "80%",
                                      }
                                    }
                                  />,
                                  "text": "When the experience starts, point the phone at the logo to trigger the 3D avatar.",
                                },
                                Object {
                                  "component": <Image
                                    resizeMode="contain"
                                    source={1}
                                    style={
                                      Object {
                                        "height": "80%",
                                        "width": "90%",
                                      }
                                    }
                                  />,
                                  "text": "Press the microphone to start recording a question.",
                                },
                                Object {
                                  "component": <Image
                                    resizeMode="contain"
                                    source={1}
                                    style={
                                      Object {
                                        "height": "80%",
                                        "width": "90%",
                                      }
                                    }
                                  />,
                                  "text": "When you've finished, hit stop to wait for the AI to process your question and respond. Make sure your volume is on!",
                                },
                                Object {
                                  "component": <Image
                                    resizeMode="contain"
                                    source={1}
                                    style={
                                      Object {
                                        "height": "80%",
                                        "width": "90%",
                                      }
                                    }
                                  />,
                                  "text": "You can find a scrollable transcript of the conversation updated in real-time on the lower half of the screen.

Click 'Continue' to proceed.",
                                },
                              ]
                            }
                            decelerationRate="fast"
                            directionalLockEnabled={true}
                            enableMomentum={false}
                            enableSnap={true}
                            firstItem={0}
                            forwardedRef={[Function]}
                            hasParallaxImages={false}
                            horizontal={true}
                            inactiveSlideOpacity={0.7}
                            inactiveSlideScale={0.9}
                            inactiveSlideShift={0}
                            inverted={false}
                            itemWidth={300}
                            layout="stack"
                            layoutCardOffset={18}
                            lockScrollTimeoutDuration={1000}
                            lockScrollWhileSnapping={false}
                            loop={false}
                            loopClonesPerSide={3}
                            onLayout={[Function]}
                            onResponderRelease={[Function]}
                            onScroll={[Function]}
                            onScrollBeginDrag={[Function]}
                            onScrollEndDrag={[Function]}
                            onSnapToItem={[Function]}
                            onStartShouldSetResponderCapture={[Function]}
                            onTouchEnd={[Function]}
                            onTouchStart={[Function]}
                            overScrollMode="never"
                            pinchGestureEnabled={false}
                            removeClippedSubviews={false}
                            renderItem={[Function]}
                            scrollEnabled={true}
                            scrollEventThrottle={1}
                            scrollsToTop={false}
                            shouldOptimizeUpdates={true}
                            showsHorizontalScrollIndicator={false}
                            showsVerticalScrollIndicator={false}
                            slideStyle={Object {}}
                            sliderWidth={300}
                            style={
                              Object {
                                "flexDirection": "row",
                                "opacity": 0,
                                "width": 300,
                              }
                            }
                            swipeThreshold={20}
                            useScrollView={false}
                            vertical={false}
                          >
                            <View>
                              <View
                                pointerEvents="box-none"
                                style={
                                  Object {
                                    "opacity": 1,
                                    "transform": Array [
                                      Object {
                                        "scale": 1,
                                      },
                                      Object {
                                        "translateX": 0,
                                      },
                                    ],
                                    "width": 300,
                                    "zIndex": 5,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "white",
                                      "borderRadius": 15,
                                      "flexDirection": "column",
                                      "height": "90%",
                                      "justifyContent": "space-evenly",
                                      "padding": 30,
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <Image
                                    resizeMode="contain"
                                    source={1}
                                    style={
                                      Object {
                                        "height": "80%",
                                        "width": "90%",
                                      }
                                    }
                                  />
                                  <Text
                                    style={
                                      Object {
                                        "color": "black",
                                      }
                                    }
                                  >
                                    Flip over the business card to find the IBM AR logo.
                                  </Text>
                                </View>
                              </View>
                              <View
                                pointerEvents="box-none"
                                style={
                                  Object {
                                    "opacity": 0.75,
                                    "transform": Array [
                                      Object {
                                        "scale": 0.9,
                                      },
                                      Object {
                                        "translateX": -298,
                                      },
                                    ],
                                    "width": 300,
                                    "zIndex": 4,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "white",
                                      "borderRadius": 15,
                                      "flexDirection": "column",
                                      "height": "90%",
                                      "justifyContent": "space-evenly",
                                      "padding": 30,
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <Image
                                    resizeMode="contain"
                                    source={1}
                                    style={
                                      Object {
                                        "height": "80%",
                                        "width": "80%",
                                      }
                                    }
                                  />
                                  <Text
                                    style={
                                      Object {
                                        "color": "black",
                                      }
                                    }
                                  >
                                    When the experience starts, point the phone at the logo to trigger the 3D avatar.
                                  </Text>
                                </View>
                              </View>
                              <View
                                pointerEvents="box-none"
                                style={
                                  Object {
                                    "opacity": 0.5,
                                    "transform": Array [
                                      Object {
                                        "scale": 0.8,
                                      },
                                      Object {
                                        "translateX": -675,
                                      },
                                    ],
                                    "width": 300,
                                    "zIndex": 3,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "white",
                                      "borderRadius": 15,
                                      "flexDirection": "column",
                                      "height": "90%",
                                      "justifyContent": "space-evenly",
                                      "padding": 30,
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <Image
                                    resizeMode="contain"
                                    source={1}
                                    style={
                                      Object {
                                        "height": "80%",
                                        "width": "90%",
                                      }
                                    }
                                  />
                                  <Text
                                    style={
                                      Object {
                                        "color": "black",
                                      }
                                    }
                                  >
                                    Press the microphone to start recording a question.
                                  </Text>
                                </View>
                              </View>
                              <View
                                pointerEvents="box-none"
                                style={
                                  Object {
                                    "opacity": 0,
                                    "transform": Array [
                                      Object {
                                        "scale": 0.8,
                                      },
                                      Object {
                                        "translateX": -1027,
                                      },
                                    ],
                                    "width": 300,
                                    "zIndex": 2,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "white",
                                      "borderRadius": 15,
                                      "flexDirection": "column",
                                      "height": "90%",
                                      "justifyContent": "space-evenly",
                                      "padding": 30,
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <Image
                                    resizeMode="contain"
                                    source={1}
                                    style={
                                      Object {
                                        "height": "80%",
                                        "width": "90%",
                                      }
                                    }
                                  />
                                  <Text
                                    style={
                                      Object {
                                        "color": "black",
                                      }
                                    }
                                  >
                                    When you've finished, hit stop to wait for the AI to process your question and respond. Make sure your volume is on!
                                  </Text>
                                </View>
                              </View>
                              <View
                                pointerEvents="box-none"
                                style={
                                  Object {
                                    "opacity": 0,
                                    "transform": Array [
                                      Object {
                                        "scale": 0.8,
                                      },
                                      Object {
                                        "translateX": -1027,
                                      },
                                    ],
                                    "width": 300,
                                    "zIndex": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "white",
                                      "borderRadius": 15,
                                      "flexDirection": "column",
                                      "height": "90%",
                                      "justifyContent": "space-evenly",
                                      "padding": 30,
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <Image
                                    resizeMode="contain"
                                    source={1}
                                    style={
                                      Object {
                                        "height": "80%",
                                        "width": "90%",
                                      }
                                    }
                                  />
                                  <Text
                                    style={
                                      Object {
                                        "color": "black",
                                      }
                                    }
                                  >
                                    You can find a scrollable transcript of the conversation updated in real-time on the lower half of the screen.

Click 'Continue' to proceed.
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </RCTScrollView>
                          <View
                            accessible={false}
                            pointerEvents="box-none"
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                  "paddingHorizontal": 20,
                                  "paddingVertical": 30,
                                },
                                Object {
                                  "flexDirection": "row",
                                },
                                Object {},
                              ]
                            }
                          >
                            <View
                              accessible={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                  "marginHorizontal": 8,
                                  "opacity": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                    "borderRadius": 5,
                                    "height": 6,
                                    "marginHorizontal": 0,
                                    "opacity": 0.5,
                                    "transform": Array [
                                      Object {
                                        "scale": 0.8,
                                      },
                                    ],
                                    "width": 6,
                                  }
                                }
                              />
                            </View>
                            <View
                              accessible={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                  "marginHorizontal": 8,
                                  "opacity": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                    "borderRadius": 5,
                                    "height": 6,
                                    "marginHorizontal": 0,
                                    "opacity": 0.5,
                                    "transform": Array [
                                      Object {
                                        "scale": 0.8,
                                      },
                                    ],
                                    "width": 6,
                                  }
                                }
                              />
                            </View>
                            <View
                              accessible={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                  "marginHorizontal": 8,
                                  "opacity": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                    "borderRadius": 5,
                                    "height": 6,
                                    "marginHorizontal": 0,
                                    "opacity": 0.5,
                                    "transform": Array [
                                      Object {
                                        "scale": 0.8,
                                      },
                                    ],
                                    "width": 6,
                                  }
                                }
                              />
                            </View>
                            <View
                              accessible={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                  "marginHorizontal": 8,
                                  "opacity": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                    "borderRadius": 5,
                                    "height": 6,
                                    "marginHorizontal": 0,
                                    "opacity": 0.5,
                                    "transform": Array [
                                      Object {
                                        "scale": 0.8,
                                      },
                                    ],
                                    "width": 6,
                                  }
                                }
                              />
                            </View>
                            <View
                              accessible={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                  "marginHorizontal": 8,
                                  "opacity": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                    "borderRadius": 5,
                                    "height": 6,
                                    "marginHorizontal": 0,
                                    "opacity": 0.5,
                                    "transform": Array [
                                      Object {
                                        "scale": 0.8,
                                      },
                                    ],
                                    "width": 6,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "flexDirection": "row",
                              "justifyContent": "flex-end",
                              "marginLeft": 20,
                              "marginRight": 20,
                              "padding": 20,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <Text
                              style={
                                Object {
                                  "color": "white",
                                }
                              }
                            >
                              Skip
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;

exports[`Tutorial Chatbot tutorial renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "zIndex": 1,
        }
      }
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        onLayout={[Function]}
        pointerEvents="box-none"
        style={null}
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "top": 0,
              "zIndex": 0,
            }
          }
        >
          <View
            style={
              Object {
                "backgroundColor": "rgb(255, 255, 255)",
                "borderBottomColor": "rgb(216, 216, 216)",
                "flex": 1,
                "shadowColor": "rgb(216, 216, 216)",
                "shadowOffset": Object {
                  "height": 0.5,
                  "width": 0,
                },
                "shadowOpacity": 0.85,
                "shadowRadius": 0,
              }
            }
          />
        </View>
        <View
          pointerEvents="box-none"
          style={
            Object {
              "height": 64,
              "maxHeight": undefined,
              "minHeight": undefined,
              "opacity": undefined,
              "transform": undefined,
            }
          }
        >
          <View
            pointerEvents="none"
            style={
              Object {
                "height": 20,
              }
            }
          />
          <View
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "marginHorizontal": 16,
                  "opacity": 1,
                }
              }
            >
              <Text
                accessibilityRole="header"
                aria-level="1"
                numberOfLines={1}
                onLayout={[Function]}
                style={
                  Object {
                    "color": "rgb(28, 28, 30)",
                    "fontSize": 17,
                    "fontWeight": "600",
                  }
                }
              >
                Tutorial
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <RNSScreenContainer
      onLayout={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        activityState={2}
        forwardedRef={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "opacity": 1,
            }
          }
        />
        <View
          accessibilityElementsHidden={false}
          closing={false}
          gestureVelocityImpact={0.3}
          importantForAccessibility="auto"
          onClose={[Function]}
          onGestureBegin={[Function]}
          onGestureCanceled={[Function]}
          onGestureEnd={[Function]}
          onOpen={[Function]}
          onTransition={[Function]}
          pointerEvents="box-none"
          style={
            Array [
              Object {
                "overflow": undefined,
              },
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          transitionSpec={
            Object {
              "close": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
              "open": Object {
                "animation": "spring",
                "config": Object {
                  "damping": 500,
                  "mass": 3,
                  "overshootClamping": true,
                  "restDisplacementThreshold": 10,
                  "restSpeedThreshold": 10,
                  "stiffness": 1000,
                },
              },
            }
          }
        >
          <View
            needsOffscreenAlphaCompositing={false}
            pointerEvents="box-none"
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              style={
                Object {
                  "flex": 1,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <View
                pointerEvents="none"
                style={
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "shadowColor": "#000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": -1,
                    },
                    "shadowOpacity": 0.3,
                    "shadowRadius": 5,
                    "top": 0,
                    "width": 3,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "column-reverse",
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "backgroundColor": "black",
                            "flex": 1,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "black",
                              "flex": 1,
                              "justifyContent": "center",
                            }
                          }
                        >
                          <RCTScrollView
                            activeAnimationOptions={null}
                            activeAnimationType="timing"
                            activeSlideAlignment="center"
                            activeSlideOffset={20}
                            apparitionDelay={0}
                            automaticallyAdjustContentInsets={false}
                            autoplay={false}
                            autoplayDelay={1000}
                            autoplayInterval={3000}
                            callbackOffsetMargin={5}
                            containerCustomStyle={Object {}}
                            contentContainerCustomStyle={Object {}}
                            contentContainerStyle={
                              Array [
                                Object {
                                  "paddingLeft": 0,
                                  "paddingRight": 0,
                                },
                                Object {},
                              ]
                            }
                            data={
                              Array [
                                Object {
                                  "component": <Image
                                    resizeMode="contain"
                                    source={1}
                                    style={
                                      Object {
                                        "height": "80%",
                                        "width": "80%",
                                      }
                                    }
                                  />,
                                  "text": "Press the microphone to start recording a message.",
                                },
                                Object {
                                  "component": <Image
                                    resizeMode="contain"
                                    source={1}
                                    style={
                                      Object {
                                        "height": "80%",
                                        "width": "90%",
                                      }
                                    }
                                  />,
                                  "text": "When you've finished, hit stop to wait for the AI to process your question and respond. Make sure your volume is on!",
                                },
                                Object {
                                  "component": <Image
                                    resizeMode="contain"
                                    source={1}
                                    style={
                                      Object {
                                        "height": "80%",
                                        "width": "90%",
                                      }
                                    }
                                  />,
                                  "text": "See the transcript of the your conversation update in real-time on the screen.

Click 'Continue' to proceed.",
                                },
                              ]
                            }
                            decelerationRate="fast"
                            directionalLockEnabled={true}
                            enableMomentum={false}
                            enableSnap={true}
                            firstItem={0}
                            forwardedRef={[Function]}
                            hasParallaxImages={false}
                            horizontal={true}
                            inactiveSlideOpacity={0.7}
                            inactiveSlideScale={0.9}
                            inactiveSlideShift={0}
                            inverted={false}
                            itemWidth={300}
                            layout="stack"
                            layoutCardOffset={18}
                            lockScrollTimeoutDuration={1000}
                            lockScrollWhileSnapping={false}
                            loop={false}
                            loopClonesPerSide={3}
                            onLayout={[Function]}
                            onResponderRelease={[Function]}
                            onScroll={[Function]}
                            onScrollBeginDrag={[Function]}
                            onScrollEndDrag={[Function]}
                            onSnapToItem={[Function]}
                            onStartShouldSetResponderCapture={[Function]}
                            onTouchEnd={[Function]}
                            onTouchStart={[Function]}
                            overScrollMode="never"
                            pinchGestureEnabled={false}
                            removeClippedSubviews={false}
                            renderItem={[Function]}
                            scrollEnabled={true}
                            scrollEventThrottle={1}
                            scrollsToTop={false}
                            shouldOptimizeUpdates={true}
                            showsHorizontalScrollIndicator={false}
                            showsVerticalScrollIndicator={false}
                            slideStyle={Object {}}
                            sliderWidth={300}
                            style={
                              Object {
                                "flexDirection": "row",
                                "opacity": 0,
                                "width": 300,
                              }
                            }
                            swipeThreshold={20}
                            useScrollView={false}
                            vertical={false}
                          >
                            <View>
                              <View
                                pointerEvents="box-none"
                                style={
                                  Object {
                                    "opacity": 1,
                                    "transform": Array [
                                      Object {
                                        "scale": 1,
                                      },
                                      Object {
                                        "translateX": 0,
                                      },
                                    ],
                                    "width": 300,
                                    "zIndex": 3,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "white",
                                      "borderRadius": 15,
                                      "flexDirection": "column",
                                      "height": "90%",
                                      "justifyContent": "space-evenly",
                                      "padding": 30,
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <Image
                                    resizeMode="contain"
                                    source={1}
                                    style={
                                      Object {
                                        "height": "80%",
                                        "width": "80%",
                                      }
                                    }
                                  />
                                  <Text
                                    style={
                                      Object {
                                        "color": "black",
                                      }
                                    }
                                  >
                                    Press the microphone to start recording a message.
                                  </Text>
                                </View>
                              </View>
                              <View
                                pointerEvents="box-none"
                                style={
                                  Object {
                                    "opacity": 0.75,
                                    "transform": Array [
                                      Object {
                                        "scale": 0.9,
                                      },
                                      Object {
                                        "translateX": -298,
                                      },
                                    ],
                                    "width": 300,
                                    "zIndex": 2,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "white",
                                      "borderRadius": 15,
                                      "flexDirection": "column",
                                      "height": "90%",
                                      "justifyContent": "space-evenly",
                                      "padding": 30,
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <Image
                                    resizeMode="contain"
                                    source={1}
                                    style={
                                      Object {
                                        "height": "80%",
                                        "width": "90%",
                                      }
                                    }
                                  />
                                  <Text
                                    style={
                                      Object {
                                        "color": "black",
                                      }
                                    }
                                  >
                                    When you've finished, hit stop to wait for the AI to process your question and respond. Make sure your volume is on!
                                  </Text>
                                </View>
                              </View>
                              <View
                                pointerEvents="box-none"
                                style={
                                  Object {
                                    "opacity": 0.5,
                                    "transform": Array [
                                      Object {
                                        "scale": 0.8,
                                      },
                                      Object {
                                        "translateX": -675,
                                      },
                                    ],
                                    "width": 300,
                                    "zIndex": 1,
                                  }
                                }
                              >
                                <View
                                  style={
                                    Object {
                                      "alignItems": "center",
                                      "backgroundColor": "white",
                                      "borderRadius": 15,
                                      "flexDirection": "column",
                                      "height": "90%",
                                      "justifyContent": "space-evenly",
                                      "padding": 30,
                                      "width": "100%",
                                    }
                                  }
                                >
                                  <Image
                                    resizeMode="contain"
                                    source={1}
                                    style={
                                      Object {
                                        "height": "80%",
                                        "width": "90%",
                                      }
                                    }
                                  />
                                  <Text
                                    style={
                                      Object {
                                        "color": "black",
                                      }
                                    }
                                  >
                                    See the transcript of the your conversation update in real-time on the screen.

Click 'Continue' to proceed.
                                  </Text>
                                </View>
                              </View>
                            </View>
                          </RCTScrollView>
                          <View
                            accessible={false}
                            pointerEvents="box-none"
                            style={
                              Array [
                                Object {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                  "paddingHorizontal": 20,
                                  "paddingVertical": 30,
                                },
                                Object {
                                  "flexDirection": "row",
                                },
                                Object {},
                              ]
                            }
                          >
                            <View
                              accessible={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                  "marginHorizontal": 8,
                                  "opacity": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                    "borderRadius": 5,
                                    "height": 6,
                                    "marginHorizontal": 0,
                                    "opacity": 0.5,
                                    "transform": Array [
                                      Object {
                                        "scale": 0.8,
                                      },
                                    ],
                                    "width": 6,
                                  }
                                }
                              />
                            </View>
                            <View
                              accessible={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                  "marginHorizontal": 8,
                                  "opacity": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                    "borderRadius": 5,
                                    "height": 6,
                                    "marginHorizontal": 0,
                                    "opacity": 0.5,
                                    "transform": Array [
                                      Object {
                                        "scale": 0.8,
                                      },
                                    ],
                                    "width": 6,
                                  }
                                }
                              />
                            </View>
                            <View
                              accessible={false}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "alignItems": "center",
                                  "justifyContent": "center",
                                  "marginHorizontal": 8,
                                  "opacity": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                    "borderRadius": 5,
                                    "height": 6,
                                    "marginHorizontal": 0,
                                    "opacity": 0.5,
                                    "transform": Array [
                                      Object {
                                        "scale": 0.8,
                                      },
                                    ],
                                    "width": 6,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                        <View
                          style={
                            Object {
                              "flexDirection": "row",
                              "justifyContent": "flex-end",
                              "marginLeft": 20,
                              "marginRight": 20,
                              "padding": 20,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <Text
                              style={
                                Object {
                                  "color": "white",
                                }
                              }
                            >
                              Skip
                            </Text>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenContainer>
  </RNCSafeAreaProvider>
</View>
`;
